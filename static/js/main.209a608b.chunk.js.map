{"version":3,"sources":["components/Searchbar/Searchbar.jsx","services/pixabay-api.js","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.jsx","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","fetchImages","searchQuery","currentPage","per_page","axios","get","then","response","data","hits","ImageGalleryItem","src","alt","onClick","largeImageURL","ImageGallery","images","map","image","webformatURL","tags","id","Button","isLoading","shouldRenderLoadMoreButton","length","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","target","window","addEventListener","removeEventListener","createPortal","children","App","error","onChangeQuery","options","prevState","catch","finally","toggleModal","showModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.209a608b.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nclass Searchbar extends Component {\r\n  state = { query: '' };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import axios from 'axios';\r\n\r\nconst apiKey = '19904270-bfb8182e3389ed52e8bacab6a';\r\n\r\nexport const fetchImages = ({\r\n  searchQuery = '',\r\n  currentPage = 1,\r\n  per_page = 12,\r\n}) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&key=${apiKey}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=${per_page}`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  render() {\r\n    const { src, alt, onClick, largeImageURL } = this.props;\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          src={src}\r\n          alt={alt}\r\n          className=\"ImageGalleryItem-image\"\r\n          onClick={() => onClick(largeImageURL, alt)}\r\n          data={largeImageURL}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\nclass ImageGallery extends Component {\r\n  render() {\r\n    const { images, onClick } = this.props;\r\n    return (\r\n      <>\r\n        <ul className=\"ImageGallery\">\r\n          {images.map(image => {\r\n            return (\r\n              <ImageGalleryItem\r\n                key={image.id}\r\n                src={image.webformatURL}\r\n                alt={image.tags}\r\n                onClick={onClick}\r\n                largeImageURL={image.largeImageURL}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequirred,\r\n      tags: PropTypes.string,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const { images, isLoading, onClick } = this.props;\r\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\r\n\r\n    return (\r\n      <>\r\n        {shouldRenderLoadMoreButton && (\r\n          <button type=\"button\" onClick={onClick} className=\"Button\">\r\n            Load more\r\n          </button>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  images: PropTypes.array,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import { Component } from 'react';\r\nimport Searchbar from './components/Searchbar';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { fetchImages } from './services/pixabay-api';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport Modal from './components/Modal';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    images: [],\r\n    currentPage: 1,\r\n    searchQuery: '',\r\n    isLoading: false,\r\n    error: null,\r\n    largeImageURL: '',\r\n    alt: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n    if (prevState.images.length !== this.state.images.length) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      currentPage: 1,\r\n      images: [],\r\n      error: null,\r\n    });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { currentPage, searchQuery } = this.state;\r\n    const options = { searchQuery, currentPage };\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    fetchImages(options)\r\n      .then(images => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...images],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  toggleModal = (largeImageURL, alt) => {\r\n    const { showModal } = this.state;\r\n\r\n    !showModal && this.setState({ largeImageURL: largeImageURL, alt: alt });\r\n\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      images,\r\n      isLoading,\r\n      error,\r\n      showModal,\r\n      largeImageURL,\r\n      alt,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Searchbar onSubmit={this.onChangeQuery} />\r\n        {error && <p>Ой ошибка, всё пропало!!!</p>}\r\n        <ImageGallery images={images} onClick={this.toggleModal} />\r\n        {isLoading && (\r\n          <Loader\r\n            className=\"Loader\"\r\n            type=\"Audio\"\r\n            color=\"#00BFFF\"\r\n            height={80}\r\n            width={80}\r\n          />\r\n        )}\r\n        <Button\r\n          images={images}\r\n          isLoading={isLoading}\r\n          onClick={this.fetchImages}\r\n        />\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <img src={largeImageURL} alt={alt} />\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}